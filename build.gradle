plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.sonarqube' version '4.3.0.3225'
    id 'maven-publish'
}

def sonarToken = System.getenv('SONAR_TOKEN') ?: ''
def nexusUsername = System.getenv('NEXUS_USERNAME') ?: ''
def nexusPassword = System.getenv('NEXUS_PASSWORD') ?: ''

group = 'com.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "Gradle-Build"
        property "sonar.projectKey", "Gradle-Build"
        property "sonar.host.url", "http://172.31.2.62:9000"
        property "sonar.login", sonarToken
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = 'your-artifact-id'
            version = project.version
            artifact(tasks.bootJar)
        }
    }
    repositories {
        maven {
            url = uri("http://172.31.14.16:8081/repository/Gradle-Artifact/")
            allowInsecureProtocol = true
            credentials {
                username = nexusUsername
                password = nexusPassword
            }
        }
    }
}

test {
    useJUnitPlatform()
}

tasks.withType(PublishToMavenRepository) {
    doFirst {
        println 'Publishing artifacts to Nexus...'
        println "Using Nexus username: ${nexusUsername ? '****' : 'NOT SET'}"
        println "Using Sonar token: ${sonarToken ? '****' : 'NOT SET'}"
    }
}
